<START> ::= <ROOT_ELEMENTS>

<ROOT_ELEMENTS> ::= <ROOT_ELEMENT> | <ROOT_ELEMENT> <ROOT_ELEMENTS>
<ROOT_ELEMENT> ::= <STMNT_HELPER> | <STMNT_DEC>

<BLOCK> ::= <BLOCK_EMPTY> | <BLOCK_OPEN> <STMNTS> <BLOCK_CLOSE>
<BLOCK_EMPTY> ::= <BLOCK_OPEN> <BLOCK_CLOSE>
<BLOCK_OPEN> ::= <B_L_CURLY>
<BLOCK_CLOSE> ::= <B_R_CURLY>

<STMNTS> ::= <STMNT> | <STMNTS> <STMNT>
<STMNT> ::= <STMNT_EMPTY> | <STMNT_EXPR> | <STMNT_PRINT_TO_STDOUT> | <STMNT_HELPER> | <STMNT_CTRL> | <STMNT_DEC>

<STMNT_DEC> ::= <STMNT_UNIT_DEC> | <STMNT_FUN_DEC> | <STMNT_VAR_DEC>
<STMNT_CTRL> ::= <STMNT_BREAK> | <STMNT_CONTINUE> | <STMNT_RETURN> | <STMNT_IF> | <STMNT_WHILE> | <STMNT_EACH>

<STMNT_EMPTY> ::= <STMNT_TERMINATOR>
<STMNT_EXPR> ::= <EXPR> <STMNT_TERMINATOR>
<STMNT_BREAK> ::= <KW_BREAK> <STMNT_TERMINATOR>
<STMNT_CONTINUE ::= <KW_CONTINUE> <STMNT_TERMINATOR>
<STMNT_RETURN> ::= <KW_RETURN> <STMNT_TERMINATOR> | <KW_RETURN> <EXPR> <STMNT_TERMINATOR>

<STMNT_PRINT_TO_STDOUT> ::= <KW_TO_STDOUT> <STMNT_PRINT_TO_STDOUT_VALS> <STMNT_TERMINATOR>
<STMNT_PRINT_TO_STDOUT_VALS> ::= <EXPR> | <EXPR> <C_COMMA> <STMNT_PRINT_TO_STDOUT_VALS>

<STMNT_VAR_DEC> ::= <STMNT_VAR_DEC_CONSTANTLESS> | <KW_CONST> <STMNT_VAR_DEC_CONSTANTLESS> | <STMNT_VAR_DEC_VALUELESS>
<STMNT_VAR_DEC_CONSTANTLESS> ::= <STMNT_VAR_DEC_SIMPLE> | <STMNT_VAR_DEC_ARRAY_ONLY_SIZE> | <STMNT_VAR_DEC_ARRAY_WITH_ELEMENTS>
<STMNT_VAR_DEC_SIMPLE> ::= <TYPE> <IDENTIFIER> <OP_ASSIGN> <EXPR> <STMNT_TERMINATOR>
<STMNT_VAR_DEC_ARRAY_ONLY_SIZE> ::= <TYPE> <IDENTIFIER> <ARRAY_LEFT> <EXPR> <ARRAY_RIGHT> <STMNT_TERMINATOR>
<STMNT_VAR_DEC_ARRAY_WITH_ELEMENTS> ::= <TYPE> <IDENTIFIER> <ARRAY_EMPTY> <OP_ASSIGN> <LIT_ARRAY> <STMNT_TERMINATOR>
<STMNT_VAR_DEC_VALUELESS> ::= <TYPE> <IDENTIFIER> <STMNT_TERMINATOR>

<STMNT_FUN_DEC> ::= <STMNT_FUN_DEC_NO_ARGS> | <STMNT_FUN_DEC_WITH_ARGS>
<STMNT_FUN_DEC_NO_ARGS> ::= <KW_FUN> <IDENTIFIER> <FUN_TYPED_BODY> | <KW_FUN> <IDENTIFIER> <FUN_VOID_BODY>
<STMNT_FUN_DEC_WITH_ARGS> ::= <KW_FUN> <IDENTIFIER> <FUN_PARAMS> <FUN_TYPED_BODY> | <KW_FUN> <IDENTIFIER> <FUN_PARAMS> <FUN_VOID_BODY>
<FUN_TYPED_BODY> ::= <KW_FAT_ARROW> <TYPE> <BLOCK>
<FUN_VOID_BODY> ::= <BLOCK>
<FUN_PARAMS> ::= <FUN_PARAMS_EMPTY> | <FUN_PARAMS_NOT_EMPTY>
<FUN_PARAMS_EMPTY> ::= <B_L_ROUND> <B_R_ROUND>
<FUN_PARAMS_NOT_EMPTY> ::= <B_L_ROUND> <FUN_PARAMS_LIST> <B_R_ROUND>
<FUN_PARAMS_LIST> ::= <FUN_PARAM> | <FUN_PARAM> <C_COMMA> <FUN_PARAMS_LIST>
<FUN_PARAM> ::= <IDENTIFIER_PARAM>

<STMNT_UNIT_DEC> ::= <KW_UNIT> <IDENTIFIER> <BLOCK_EMPTY> | <KW_UNIT> <IDENTIFIER> <UNIT_BODY>
<UNIT_DEC_BODY> ::= <BLOCK_OPEN> <UNIT_FIELDS> <BLOCK_CLOSE>
<UNIT_DEC_FIELDS> ::= <UNIT_FIELD> | <UNIT_FIELD> <UNIT_FIELDS>
<UNIT_DEC_FIELD> ::= <IDENTIFIER_PARAM> <STMNT_TERMINATOR>

<STMNT_HELPER> ::= <HELPER>
<HELPER> ::= <HELPER_INCLUDE>
<HELPER_INCLUDE> ::= <KW_HELPER_START> "include" <LIT_STR> <STMNT_TERMINATOR>

<STMNT_IF> ::= <KW_IF> <EXPR> <BLOCK> | <KW_IF> <EXPR> <BLOCK> <KW_ELSE> <BLOCK> | <KW_IF> <EXPR> <BLOCK> <KW_ELSE> <STMNT_IF> 

<STMNT_WHILE> ::= <KW_WHILE> <EXPR> <BLOCK>
<STMNT_EACH> ::= <KW_EACH> <IDENTIFIER> <KW_IN> <EXPR> <BLOCK>

<EXPR> ::= <EXPR_10>

<EXPR_10> ::= <EXPR_9> | <EXPR_ASSIGN>
<EXPR_ASSIGN> ::= <EXPR_VAR_ACCESS> <OP_ASSIGN> <EXPR_10>

<EXPR_9> ::= <EXPR_8> | <EXPR_OR>
<EXPR_OR> ::= <EXPR_8> <OP_OR> <EXPR_9> 

<EXPR_8> ::= <EXPR_7> | <EXPR_AND>
<EXPR_AND> ::= <EXPR_7> <OP_AND> <EXPR_8>

<EXPR_7> ::= <EXPR_6> | <EXPR_EQUAL> | <EXPR_NOT_EQUAL>
<EXPR_EQUAL> ::= <EXPR_6> <OP_EQ> <EXPR_7>
<EXPR_NOT_EQUAL> ::= <EXPR_6> <OP_NE> <EXPR_7>

<EXPR_6> ::= <EXPR_5> | <EXPR_GT> | <EXPR_GE> | <EXPR_LT> | <EXPR_LE>
<EXPR_GT> ::= <EXPR_5> <OP_GT> <EXPR_5>
<EXPR_GE> ::= <EXPR_5> <OP_GE> <EXPR_5>
<EXPR_LT> ::= <EXPR_5> <OP_LT> <EXPR_5>
<EXPR_LE> ::= <EXPR_5> <OP_LE> <EXPR_5>

<EXPR_5> ::= <EXPR_4> | <EXPR_ADD> | <EXPR_SUB>
<EXPR_ADD> ::= <EXPR_5> <OP_PLUS> <EXPR_4>
<EXPR_SUB> ::= <EXPR_5> <OP_MINUS> <EXPR_4>

<EXPR_4> ::= <EXPR_3> | <EXPR_MUL> | <EXPR_DIV> | <EXPR_MOD>
<EXPR_MUL> ::= <EXPR_4> <OP_MUL> <EXPR_3> 
<EXPR_DIV> ::= <EXPR_4> <OP_DIV> <EXPR_3>
<EXPR_MOD> ::= <EXPR_4> <OP_MOD> <EXPR_3>

<EXPR_3> ::= <EXPR_2> | <EXPR_UNARY_PLUS> | <EXPR_UNARY_MINUS>
<EXPR_UNARY_PLUS> ::= <OP_PLUS> <EXPR_3>
<EXPR_UNARY_MINUS> ::= <OP_MINUS> <EXPR_3>

<EXPR_2> ::= <EXPR_1> | <EXPR_POW>
<EXPR_POW> ::= <EXPR_1> <OP_POW> <EXPR_2>

<EXPR_1> ::= <EXPR_1_SINGLE_VALUE> | <EXPR_1_SINGLE_VALUE> <OP_ACCESS> <EXPR_ACCESS_MEMBERS>
<EXPR_1_SINGLE_VALUE> ::= <EXPR_VAR_ACCESS> | <EXPR_LIT> | <EXPR_FROM_STDIN> | <EXPR_CALLABLE> | <EXPR_PARENTHESIS> | <EXPR_ARRAY_ACCESS>
<EXPR_CALLABLE> ::= <EXPR_FUN_CALL> | <EXPR_CREATE_UNIT>
<EXPR_ACCESS_MEMBERS> ::= <IDENTIFIER> | <IDENTIFIER> <OP_ACCESS> <EXPR_ACCESS_MEMBERS>
<EXPR_LIT> ::= <LIT>
<EXPR_FUN_CALL> ::= <IDENTIFIER> <FUN_CALL_LEFT> <FUN_CALL_RIGHT> | <IDENTIFIER> <FUN_CALL_LEFT> <EXPR_FUN_ARGS> <FUN_CALL_RIGHT>
<EXPR_FUN_ARGS> ::= <EXPR> | <EXPR> <C_COMMA> <EXPR_FUN_ARGS>
<EXPR_ARRAY_ACCESS> ::= <EXPR_1> <ARRAY_LEFT> <EXPR> <ARRAY_RIGHT>
<EXPR_FROM_STDIN> ::= <KW_FROM_STDIN>
<EXPR_CREATE_UNIT> ::= <IDENTIFIER> <FUN_CALL_LEFT> <FUN_CALL_RIGHT> | <IDENTIFIER> <FUN_CALL_LEFT> <EXPR_CREATE_UNIT_ARGS> <FUN_CALL_RIGHT>
<EXPR_CREATE_UNIT_ARGS> ::= <EXPR_CREATE_UNIT_ARG> | <EXPR_CREATE_UNIT_ARG> <C_COMMA> <EXPR_CREATE_UNIT_ARGS>
<EXPR_CREATE_UNIT_ARG> ::= <IDENTIFIER> <C_COLON> <EXPR>
<EXPR_PARENTHESIS> ::= <B_L_ROUND> <EXPR> <B_R_ROUND>

<IDENTIFIER_PARAM> ::= <TYPE> <IDENTIFIER> | <TYPE> <IDENTIFIER> <ARRAY_LEFT> <ARRAY_RIGHT>
<IDENTIFIER> ::= <LETTER> | <LETTER> <IDENTIFIER_CHARS> 
<IDENTIFIER_CHARS> ::= <DIGITS> | <C_UNDERSCORE> | <LETTER> | <DIGIT> <IDENTIFIER_CHARS> | <C_UNDERSCORE> <IDENTIFIER_CHARS> | <LETTER> <IDENTIFIER_CHARS>

<TYPE> ::= <IDENTIFIER> | <TYPE_PRIMITIVE>
<TYPE_PRIMITIVE> ::= <TYPE_INT> | <TYPE_FLOAT> | <TYPE_CHAR> | <TYPE_STRING> | <TYPE_BOOL> | <TYPE_BYTE>
<TYPE_INT> ::= "int"
<TYPE_FLOAT> ::= "float"
<TYPE_CHAR> ::= "char"
<TYPE_STRING> ::= "string"
<TYPE_BOOL> ::= "bool"
<TYPE_BYTE> ::= "byte"

<KW_FUN> ::= "fun"
<KW_FAT_ARROW> ::= "=>"
<KW_UNIT> ::= "unit"
<KW_HELPER_START> ::= ">"
<KW_RETURN> ::= "ret"
<KW_TO_STDOUT> ::= "-->"
<KW_FROM_STDIN> ::= "-->"
<KW_IF> ::= "if"
<KW_ELSE> ::= "else"
<KW_EACH> ::= "each"
<KW_WHILE> ::= "while"
<KW_CONST> ::= "const"
<KW_CONTINUE> ::= "continue"
<KW_BREAK> ::= "break"

<STMNT_TERMINATOR> ::= <C_SEMICOLON>

<FUN_CALL_LEFT> ::= <B_L_ROUND>
<FUN_CALL_RIGHT> ::= <B_R_ROUND>

<OP_PLUS> ::= "+"
<OP_MINUS> ::= "-"
<OP_MUL> ::= "*"
<OP_DIV> ::= "/"
<OP_MOD> ::= "%"
<OP_POW> ::= "^"

<OP_ACCESS> ::= "."
<OP_ASSIGN> ::= "="

<OP_EQ> ::= "=="
<OP_NE> ::= "!="
<OP_GT> ::= ">"
<OP_LT> ::= "<"
<OP_GE> ::= ">="
<OP_LE> ::= "<="

<OP_AND> ::= "&&"
<OP_OR> ::= "||"
<OP_NOT> ::= "!"

<COMMENT_SINGLE> ::= <COMMENT_START> <LIT>
<COMMENT_SINGLE_START> ::= "//"

<COMMENT_MULTIPLE> ::= <COMMENT_MULTIPLE_START> <LIT> <COMMENT_MULTIPLE_END>
<COMMENT_MULTIPLE_START> ::= "/*"
<COMMENT_MULTIPLE_END> ::= "*/"

<LIT> ::= <LIT_STR> | <LIT_CHAR> | <LIT_INT> | <LIT_FLOAT> | <LIT_BOOL>
<LIT_STR> ::= "\"" "\"" | "\"" <STR_CHARS> "\""
<LIT_CHAR> ::= "'" <STfR_CHAR> "'"
<LIT_INT> ::= <DIGITS>
<LIT_FLOAT> ::= <LIT_FLOAT_SIMPLE> | <LIT_FLOAT_SIMPLE> <LIT_FLOAT_EXP> | <DIGITS> <LIT_FLOAT_EXP>
<LIT_FLOAT_EXP> ::= <LIT_FLOAT_E> <LIT_FLOAT_SIGN> <DIGITS> | <LIT_FLOAT_E> <DIGITS>
<LIT_FLOAT_SIGN> ::= <OP_PLUS> | <OP_MINUS>
<LIT_FLOAT_E> ::= "e" | "E"
<LIT_FLOAT_SIMPLE> ::= "." <DIGITS> | <DIGITS> "." | <DIGITS> "." <DIGITS>
<LIT_BOOL> ::= "true" | "false"
<LIT_ARRAY> ::= <ARRAY_EMPTY> | <ARRAY_LEFT> <ARRAY_ITEM_LIST> <ARRAY_RIGHT>
<LIT_NULL> ::= "null"

<ARRAY_ITEM_LIST> ::= <EXPR> | <EXPR> <C_COMMA> <ARRAY_ITEM_LIST>
<ARRAY_EMPTY> ::= <ARRAY_LEFT> <ARRAY_RIGHT>
<ARRAY_LEFT> ::= <B_L_BOX>
<ARRAY_RIGHT> ::= <B_R_BOX>

<STR_CHARS> ::= <STR_CHAR> | <STR_CHAR> <STR_CHARS>
<STR_CHAR> ::= <DIGIT> | <LETTER> | <SPECIAL_CHAR> | <ESCAPED_CHAR>

<ESCAPED_CHAR> ::= "\\" <ESCAPABLE_CHAR>
<ESCAPABLE_CHAR> ::= "\"" | "\\" | "n" | "t" | "r"

<SPECIAL_CHAR> ::= "!" | "#" | "@" | "$" | "%" | "&" | "'" | "(" | ")" | "*" | "+" | "," | "-" | "." | "/" | ":" | ";" | "<" | "=" | ">" | "?" | "@" | "[" | "]" | "^" | "_" | "`" | "{" | "}" | "|" | "~" | "â‚¬" | " "

<C_UNDERSCORE> ::= "_"
<C_SEMICOLON> ::= ";"
<C_COLON> ::= ":"
<C_COMMA> ::= ","
<B_L_ROUND> ::= "("
<B_R_ROUND> ::= ")"
<B_L_BOX> ::= "["
<B_R_BOX> ::= "]"
<B_L_CURLY> ::= "{"
<B_R_CURLY> ::= "}"
<B_L_ANGLE> ::= "<"
<B_R_ANGLE> ::= ">"

<LETTER> ::= <LC_LETTER> | <UC_LETTER>
<LC_LETTER> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
<UC_LETTER> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<DIGITS> ::= <DIGIT> | <DIGITS> <DIGIT>
<DIGIT> ::= "0" | "1" | "2" | "3" | "4" | "5" | "7" | "8" | "9"